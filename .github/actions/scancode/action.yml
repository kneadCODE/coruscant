name: "ScanCode License Scanner"
description: "Run ScanCode Toolkit for comprehensive license and copyright detection"

inputs:
  working-directory:
    description: "Working directory for the scan (default: repo root)"
    required: false
    default: "."
  output-format:
    description: "Output format: json, spdx-json, spdx-tag, cyclonedx-json, html, csv (default: spdx-json)"
    required: false
    default: "spdx-json"
  scan-options:
    description: "ScanCode scan options (default: -clipeu for copyright, license, info, package, email, url)"
    required: false
    default: "-clipeu"
  category:
    description: "Optional category to distinguish multiple reports for the same tool"
    required: false

runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install ScanCode Toolkit
      shell: bash
      run: |
        echo "Installing ScanCode Toolkit..."
        pip install --upgrade pip
        pip install scancode-toolkit[full]
        scancode --version

    - name: Run ScanCode License Scan
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "=== Running ScanCode License Scan ==="
        echo "Working directory: $(pwd)"
        echo "Scan options: ${{ inputs.scan-options }}"
        echo "Output format: ${{ inputs.output-format }}"
        
        # Create output filename based on format
        case "${{ inputs.output-format }}" in
          json) output_file="scancode-results.json" ;;
          spdx-json) output_file="scancode-results.spdx.json" ;;
          spdx-tag) output_file="scancode-results.spdx" ;;
          cyclonedx-json) output_file="scancode-results.cyclonedx.json" ;;
          html) output_file="scancode-results.html" ;;
          csv) output_file="scancode-results.csv" ;;
          *) output_file="scancode-results.json" ;;
        esac
        
        # Run ScanCode scan
        scancode ${{ inputs.scan-options }} \
          --${{ inputs.output-format }} "$output_file" \
          --license-text \
          --license-text-diagnostics \
          --processes -1 \
          .
        
        echo "=== Scan completed ==="
        echo "Results saved to: $output_file"
        
        # Display summary if JSON format
        if [[ "${{ inputs.output-format }}" == "json" ]] && command -v jq >/dev/null 2>&1; then
          echo "=== License Summary ==="
          jq -r '.files[].licenses[]?.short_name // empty' "$output_file" | sort | uniq -c | sort -nr | head -20
        fi

    - name: Upload ScanCode Results
      if: always()
      uses: actions/upload-artifact@v5
      with:
        name: scancode-license-report-${{ inputs.category || 'default' }}
        path: ${{ inputs.working-directory }}/scancode-results.*
        retention-days: 30

    - name: Generate License Summary Report
      if: always()
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "=== Generating License Compliance Summary ===" 
        
        # Create a comprehensive summary report
        cat > license-summary.md << 'EOF'
        # License Compliance Report
        
        Generated on: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        Scan Directory: ${{ inputs.working-directory }}
        
        ## Scan Configuration
        - **ScanCode Options**: ${{ inputs.scan-options }}
        - **Output Format**: ${{ inputs.output-format }}
        - **Category**: ${{ inputs.category || 'default' }}
        
        ## Summary
        This report contains license and copyright information detected by ScanCode Toolkit.
        
        **Important**: This is an automated scan. Please review all findings manually for accuracy and compliance decisions.
        
        ## Next Steps
        1. Download the detailed report artifacts
        2. Review identified licenses for compliance with your project policies
        3. Address any license compatibility issues
        4. Update license documentation as needed
        
        ---
        Generated by ScanCode Toolkit License Scanner
        EOF
        
        echo "License summary report created: license-summary.md"

    - name: Upload License Summary
      if: always()
      uses: actions/upload-artifact@v5
      with:
        name: license-summary-${{ inputs.category || 'default' }}
        path: ${{ inputs.working-directory }}/license-summary.md
        retention-days: 90