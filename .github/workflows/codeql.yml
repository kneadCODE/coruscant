# Static Application Security Testing (SAST) for Coruscant Project
#
# This workflow performs CodeQL static analysis on Go code to identify
# security vulnerabilities and code quality issues.
#
# Scan Coverage:
# - Security vulnerabilities in Go code
# - Common coding errors and anti-patterns
# - Supply chain security analysis
#
# Architecture:
# - Reports findings to GitHub Security tab via SARIF
# - Runs on PR/push for fast feedback + weekly scheduled scans
# - Uses security-extended queries for comprehensive analysis

name: "CodeQL Analysis"

# Default permissions (most restrictive)
permissions: read-all

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    - cron: "0 3 * * 0" # Weekly security scan on Sundays at 3 AM UTC

jobs:
  codeql-go:
    name: "CodeQL Analysis (Go)"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      security-events: write # Upload SARIF results to GitHub Security
      contents: read # Read repository contents
      actions: read # Required by CodeQL action

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Go Workspace
        uses: ./.github/actions/setup-go-workspace

      - name: Generate mocks
        if: matrix.gen-mocks == true
        run: docker compose run --rm -w /app/${{ matrix.path }} mockery

      - name: Initialize CodeQL
        uses: github/codeql-action/init@64d10c13136e1c5bce3e5fbde8d4906eeaafc885 # v3.30.6
        with:
          languages: go
          queries: security-extended,security-and-quality

      - name: Build all Go packages in every module for CodeQL analysis
        run: |
          # Find every go.mod and build all packages in its directory
          find . -name 'go.mod' | while read gomod; do
            moddir=$(dirname "$gomod")
            echo "Building all packages in $moddir"
            (cd "$moddir" && go build ./...)
          done

      - name: Build all Go binaries for CodeQL analysis
        run: |
          # Build all Go binaries in the monorepo for better analysis
          for cmdpkg in systems/*/cmd/*; do
            if [ -d "$cmdpkg" ]; then
              echo "Building $cmdpkg for CodeQL analysis"
              (cd "$cmdpkg" && go build .)
            fi
          done

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@64d10c13136e1c5bce3e5fbde8d4906eeaafc885 # v3.30.6
        with:
          category: "/language:go"
  codeql-actions:
    name: "CodeQL Analysis (GitHub Actions)"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      security-events: write # Upload SARIF results to GitHub Security
      contents: read # Read repository contents
      actions: read # Required by CodeQL action

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@64d10c13136e1c5bce3e5fbde8d4906eeaafc885 # v3.30.6
        with:
          languages: actions
          queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@64d10c13136e1c5bce3e5fbde8d4906eeaafc885 # v3.30.6
        with:
          category: "/language:actions"
